FORMAT: 1A
HOST: https://api.gettyimages.com
# Getty Images API

Build applications using the world's most powerful imagery. Our RESTful APIs are supported with [technical documentation](http://developers.gettyimages.com/api/docs/), [sample code](https://github.com/gettyimages/gettyimages-api/tree/master/code-samples) and [SDKs](http://developers.gettyimages.com/api/docs//v3/sdks.html) so you can get up and running quickly.

## Group Search

#### Search for events [GET /v3/search/events]

+ Parameters

    + editorial_segment: archival,entertainment,news,publicity,royalty,sport (required)
    
    + date_from
    
    + date_to
    
    + fields: id,child_event_count,editorial_segments,hero_image,image_count,location,name,start_date,type

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "events": [
                {
                  "child_event_count": 97567878,
                  "start_date": "4339-07-03T04:02:36.356Z",
                  "editorial_segments": [
                    "nisi eu exercitation qui nulla"
                  ],
                  "id": -71108207,
                  "hero_image": {
                    "id": "occaecat id Ut",
                    "display_sizes": [
                      {
                        "uri": "incididunt in ipsum nisi ea",
                        "name": "ut veniam",
                        "is_watermarked": false
                      },
                      {},
                      {
                        "name": "occaecat minim ullamco est"
                      },
                      {
                        "is_watermarked": true,
                        "name": "sed"
                      }
                    ]
                  },
                  "location": {
                    "city": "Duis",
                    "venue": "sed",
                    "state_province": "Excepteur aute voluptate"
                  }
                },
                {
                  "child_event_count": -2157215,
                  "location": {
                    "state_province": "anim sint laborum adipisicing magna",
                    "venue": "Lorem esse",
                    "country": "proident"
                  },
                  "id": 45215239
                },
                {
                  "hero_image": {
                    "id": "fugiat laborum"
                  },
                  "id": 20683760
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "events": {
                  "description": "Lists the event ids matching the search criteria.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "child_event_count": {
                        "format": "int32",
                        "description": "Specifies the count of children events associated with this event.",
                        "type": "integer"
                      },
                      "editorial_segments": {
                        "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hero_image": {
                        "description": "Spcifies the image that best captures the event.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Specifies the image id of the image that best captures the associated group of images.",
                            "type": "string"
                          },
                          "display_sizes": {
                            "description": "Lists the display sizes available for this image.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Specifies the name of the display size.",
                                  "type": "string"
                                },
                                "is_watermarked": {
                                  "description": "Specifies whether the image is watermarked.",
                                  "type": "boolean"
                                },
                                "uri": {
                                  "description": "GET this URI to retrieve the display size image.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "format": "int32",
                        "description": "Specifies the unique identifier for the event.",
                        "type": "integer"
                      },
                      "image_count": {
                        "format": "int32",
                        "description": "Specifies the count of images associated with event.",
                        "type": "integer"
                      },
                      "location": {
                        "description": "Specifies the location where the event took place.",
                        "type": "object",
                        "properties": {
                          "city": {
                            "description": "Specifies the city where the event took place.",
                            "type": "string"
                          },
                          "country": {
                            "description": "Specifies the country where the event took place.",
                            "type": "string"
                          },
                          "state_province": {
                            "description": "Specifies the state or province where the event took place.",
                            "type": "string"
                          },
                          "venue": {
                            "description": "Specifies the venue where the event took place.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Specifies the name of the event.",
                        "type": "string"
                      },
                      "start_date": {
                        "format": "date-time",
                        "description": "Specifies the start date of event, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

#### Search for both creative and editorial images [GET /v3/search/images]

+ Parameters

    + age_of_people: newborn,baby,child,teenager,young_adult,adult,adults_only,mature_adult,senior_adult,months_0_1,months_2_5,months_6_11,months_12_17,months_18_23,years_2_3,years_4_5,years_6_7,years_8_9,years_10_11,years_12_13,years_14_15,years_16_17,years_18_19,years_20_24,years_20_29,years_25_29,years_30_34,years_30_39,years_35_39,years_40_44,years_40_49,years_45_49,years_50_54,years_50_59,years_55_59,years_60_64,years_60_69,years_65_69,years_70_79,years_80_89,over_90,over_100
    
    + artists
    
    + collection_codes: 
    
    + collections_filter_type: include,exclude
    
    + color
    
    + compositions: abstract,candid,close_up,copy_space,cut_out,full_frame,full_length,headshot,looking_at_camera,macro,portrait,sparse,still_life,three_quarter_length,waist_up
    
    + embed_content_only
    
    + ethnicity: black,caucasian,east_asian,hispanic_latino,japanese,middle_eastern,mixed_race_person,multiethnic_group,native_american_first_nations,pacific_islander,south_asian,southeast_asian
    
    + event_ids: 
    
    + exclude_nudity
    
    + fields: accessrestriction,allowed_use,alternative_ids,artist,asset_family,call_for_image,caption,collection_code,collection_id,collection_name,color_type,comp,copyright,date_camera_shot,date_created,detail_set,display_set,editorial_segments,editorial_source,event_ids,graphical_style,id,keywords,largest_downloads,license_model,max_dimensions,orientation,people,prestige,preview,product_types,quality_rank,referral_destinations,summary_set,thumb,title,uri_oembed
    
    + file_types: eps,gif,jpg,png
    
    + graphical_styles: fine_art,illustration,photography
    
    + keyword_ids: 
    
    + license_models: rights_managed,royalty_free
    
    + number_of_people: none,one,two,group
    
    + orientations: horizontal,vertical,square,panoramic_horizontal,panoramic_vertical
    
    + page
    
    + page_size
    
    + phrase
    
    + prestige_content_only
    
    + product_types: easy_access,editorial_subscription,image_pack,premium_access,royalty_free_subscription,credit_pack
    
    + sort_order: best_match,most_popular,newest
    
    + specific_people: 

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "result_count": -86205183
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Specifies the count of matching images returned.",
                  "type": "integer"
                },
                "images": {
                  "description": "List of image search results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the image.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "alternative_ids": {
                        "description": "Lists all of the alternative ids for the asset.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Key": {
                              "type": "string"
                            },
                            "Value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies image creator.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "call_for_image": {
                        "description": "Indicates whether a customer needs to call Getty Images in order to license this image.",
                        "type": "boolean"
                      },
                      "caption": {
                        "description": "Gives a brief description of the image.",
                        "type": "string"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the image belongs.",
                        "type": "integer"
                      },
                      "collection_name": {
                        "description": "Specifies the name of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the image.",
                        "type": "string"
                      },
                      "date_camera_shot": {
                        "format": "date-time",
                        "description": "Specifies the date the image was shot, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the image was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display sizes available for this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "editorial_segments": {
                        "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "event_ids": {
                        "description": "Lists the events that are relevant for this image.",
                        "type": "array",
                        "items": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "graphical_style": {
                        "description": "Specifies the graphical style for the image. Possible values are Photography, Fine Art, and Illustration.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Specifies the unique identifier for the image.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keywords that are associated with this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "largest_downloads": {
                        "description": "Lists the available largest download sizes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_id": {
                              "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                              "type": "string"
                            },
                            "product_type": {
                              "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "POST this URI to download the asset.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the image. Possible values are: royaltyfree, rightsmanaged.",
                        "type": "string"
                      },
                      "max_dimensions": {
                        "description": "Specifies the maximum height and width of any size for this image.",
                        "type": "object",
                        "properties": {
                          "height": {
                            "format": "int32",
                            "description": "Specifies the height in pixels.",
                            "type": "integer"
                          },
                          "width": {
                            "format": "int32",
                            "description": "Specifies the width in pixels.",
                            "type": "integer"
                          }
                        }
                      },
                      "orientation": {
                        "description": "Specifies the orientation of the image. Possible values are: Horizontal, PanoramicHorizontal, PanoramicVertical, Square, Vertical, and null.",
                        "type": "string"
                      },
                      "people": {
                        "description": "List of people appearing in the image.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "prestige": {
                        "description": "Specifies the image is in the curated Prestige collection.",
                        "type": "boolean"
                      },
                      "product_types": {
                        "description": "Lists the product types for the image. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "quality_rank": {
                        "format": "int32",
                        "description": "Specifies the quality ranking of the image.",
                        "type": "integer"
                      },
                      "referral_destinations": {
                        "description": "Lists the referral destinations for Getty Images assets.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "site_name": {
                              "description": "Specifies the asset domain name.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve appropriate referral destination data.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "title": {
                        "description": "Specifies the image title.",
                        "type": "string"
                      },
                      "uri_oembed": {
                        "description": "GET this URI to retrieve oEmbed data for the image, if embeddable.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

#### Search for creative images only [GET /v3/search/images/creative]

+ Parameters

    + age_of_people: newborn,baby,child,teenager,young_adult,adult,adults_only,mature_adult,senior_adult,months_0_1,months_2_5,months_6_11,months_12_17,months_18_23,years_2_3,years_4_5,years_6_7,years_8_9,years_10_11,years_12_13,years_14_15,years_16_17,years_18_19,years_20_24,years_20_29,years_25_29,years_30_34,years_30_39,years_35_39,years_40_44,years_40_49,years_45_49,years_50_54,years_50_59,years_55_59,years_60_64,years_60_69,years_65_69,years_70_79,years_80_89,over_90,over_100
    
    + artists
    
    + collection_codes: 
    
    + collections_filter_type: include,exclude
    
    + color
    
    + compositions: abstract,candid,close_up,copy_space,cut_out,full_frame,full_length,headshot,looking_at_camera,macro,portrait,sparse,still_life,three_quarter_length,waist_up
    
    + embed_content_only
    
    + ethnicity: black,caucasian,east_asian,hispanic_latino,japanese,middle_eastern,mixed_race_person,multiethnic_group,native_american_first_nations,pacific_islander,south_asian,southeast_asian
    
    + exclude_nudity
    
    + fields: allowed_use,alternative_ids,artist,asset_family,call_for_image,caption,collection_code,collection_id,collection_name,color_type,comp,copyright,date_camera_shot,date_created,detail_set,display_set,graphical_style,id,keywords,largest_downloads,license_model,max_dimensions,orientation,prestige,preview,product_types,quality_rank,referral_destinations,summary_set,thumb,title,uri_oembed
    
    + file_types: eps,gif,jpg,png
    
    + graphical_styles: fine_art,illustration,photography
    
    + keyword_ids: 
    
    + license_models: rights_managed,royalty_free
    
    + number_of_people: none,one,two,group
    
    + orientations: horizontal,vertical,square,panoramic_horizontal,panoramic_vertical
    
    + page
    
    + page_size
    
    + phrase
    
    + prestige_content_only
    
    + product_types: easy_access,editorial_subscription,image_pack,premium_access,royalty_free_subscription,credit_pack
    
    + sort_order: best_match,most_popular,newest

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "result_count": -47932046
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Specifies the count of matching images returned.",
                  "type": "integer"
                },
                "images": {
                  "description": "List of image search results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the image.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "alternative_ids": {
                        "description": "Lists all of the alternative ids for the asset.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Key": {
                              "type": "string"
                            },
                            "Value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies image creator.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "call_for_image": {
                        "description": "Indicates whether a customer needs to call Getty Images in order to license this image.",
                        "type": "boolean"
                      },
                      "caption": {
                        "description": "Gives a brief description of the image.",
                        "type": "string"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the image belongs.",
                        "type": "integer"
                      },
                      "collection_name": {
                        "description": "Specifies the name of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the image.",
                        "type": "string"
                      },
                      "date_camera_shot": {
                        "format": "date-time",
                        "description": "Specifies the date the image was shot, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the image was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display sizes available for this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "graphical_style": {
                        "description": "Specifies the graphical style for the image. Possible values are Photography, Fine Art, and Illustration.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Specifies the unique identifier for the image.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keywords that are associated with this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "largest_downloads": {
                        "description": "Lists the available largest download sizes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_id": {
                              "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                              "type": "string"
                            },
                            "product_type": {
                              "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "POST this URI to download the asset.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the image. Possible values are: royaltyfree, rightsmanaged.",
                        "type": "string"
                      },
                      "max_dimensions": {
                        "description": "Specifies the maximum height and width of any size for this image.",
                        "type": "object",
                        "properties": {
                          "height": {
                            "format": "int32",
                            "description": "Specifies the height in pixels.",
                            "type": "integer"
                          },
                          "width": {
                            "format": "int32",
                            "description": "Specifies the width in pixels.",
                            "type": "integer"
                          }
                        }
                      },
                      "orientation": {
                        "description": "Specifies the orientation of the image. Possible values are: Horizontal, PanoramicHorizontal, PanoramicVertical, Square, Vertical, and null.",
                        "type": "string"
                      },
                      "prestige": {
                        "description": "Specifies the image is in the curated Prestige collection.",
                        "type": "boolean"
                      },
                      "product_types": {
                        "description": "Lists the product types for the image. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "quality_rank": {
                        "format": "int32",
                        "description": "Assigned to editorial images to rank their relevance to the event they belong to. This number has no relevance for creative images even though it does appear in the metadata. Possible values are: 1 - most relevant, 2 - tells story from a wider perspective, 3 - stock/repeats/less important.",
                        "type": "integer"
                      },
                      "referral_destinations": {
                        "description": "Lists the referral destinations for Getty Images assets.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "site_name": {
                              "description": "Specifies the asset domain name.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve appropriate referral destination data.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "title": {
                        "description": "Specifies the image title.",
                        "type": "string"
                      },
                      "uri_oembed": {
                        "description": "GET this URI to retrieve the display image, if embeddable.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

#### Search for editorial images only [GET /v3/search/images/editorial]

+ Parameters

    + age_of_people: newborn,baby,child,teenager,young_adult,adult,adults_only,mature_adult,senior_adult,months_0_1,months_2_5,months_6_11,months_12_17,months_18_23,years_2_3,years_4_5,years_6_7,years_8_9,years_10_11,years_12_13,years_14_15,years_16_17,years_18_19,years_20_24,years_20_29,years_25_29,years_30_34,years_30_39,years_35_39,years_40_44,years_40_49,years_45_49,years_50_54,years_50_59,years_55_59,years_60_64,years_60_69,years_65_69,years_70_79,years_80_89,over_90,over_100
    
    + artists
    
    + collection_codes: 
    
    + collections_filter_type: include,exclude
    
    + color
    
    + compositions: abstract,candid,close_up,copy_space,cut_out,full_frame,full_length,headshot,looking_at_camera,macro,portrait,sparse,still_life,three_quarter_length,waist_up
    
    + date_from
    
    + date_to
    
    + editorial_segments: archival,entertainment,news,publicity,royalty,sport
    
    + embed_content_only
    
    + entity_uris: 
    
    + ethnicity: black,caucasian,east_asian,hispanic_latino,japanese,middle_eastern,mixed_race_person,multiethnic_group,native_american_first_nations,pacific_islander,south_asian,southeast_asian
    
    + event_ids: 
    
    + exclude_nudity
    
    + fields: allowed_use,alternative_ids,artist,asset_family,call_for_image,caption,collection_code,collection_id,collection_name,color_type,comp,copyright,date_camera_shot,date_created,detail_set,display_set,editorial_segments,editorial_source,event_ids,graphical_style,id,keywords,largest_downloads,license_model,max_dimensions,orientation,people,preview,product_types,quality_rank,referral_destinations,summary_set,thumb,title,uri_oembed
    
    + file_types: eps,gif,jpg,png
    
    + graphical_styles: photography,illustration
    
    + keyword_ids: 
    
    + number_of_people: none,one,two,group
    
    + orientations: horizontal,vertical,square,panoramic_horizontal,panoramic_vertical
    
    + page
    
    + page_size
    
    + phrase
    
    + product_types: easy_access,editorial_subscription,image_pack,premium_access,royalty_free_subscription,credit_pack
    
    + sort_order: best_match,most_popular,newest,oldest
    
    + specific_people: 

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token]

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "result_count": 47756180,
              "images": [
                {
                  "date_camera_shot": "4336-04-18T23:26:08.108Z",
                  "copyright": "id",
                  "asset_family": "minim labore elit voluptate irure",
                  "editorial_segments": [
                    "sint",
                    "occaecat consectetur et",
                    "veniam",
                    "ut magna quis"
                  ],
                  "orientation": "ut Excepteur Ut sit",
                  "event_ids": [
                    -62181497,
                    -18648453,
                    63669825,
                    71261966
                  ],
                  "artist": "dolore ad",
                  "quality_rank": -45867776,
                  "title": "reprehenderit nisi do",
                  "id": "do deserunt",
                  "call_for_image": true
                },
                {
                  "collection_name": "mollit Ut aute in fugiat",
                  "max_dimensions": {
                    "height": 21254638,
                    "width": -65215499
                  },
                  "display_sizes": [
                    {
                      "name": "proident fugiat",
                      "is_watermarked": true
                    },
                    {
                      "uri": "ut sint labore",
                      "name": "pariatur sint dolore exercitat",
                      "is_watermarked": true
                    },
                    {
                      "name": "labore sunt magna est",
                      "uri": "id minim",
                      "is_watermarked": false
                    },
                    {
                      "uri": "sed labore ullamco amet in",
                      "name": "id",
                      "is_watermarked": true
                    },
                    {
                      "name": "sint proident enim",
                      "is_watermarked": true
                    }
                  ],
                  "graphical_style": "amet ut ex",
                  "asset_family": "dolore laboris",
                  "allowed_use": {
                    "usage_restrictions": [
                      "irure sit id sed in",
                      "dolore culpa eiusmod",
                      "consectetur ut"
                    ]
                  },
                  "collection_code": "aliqua ipsum mollit incididunt",
                  "call_for_image": true,
                  "editorial_source": {
                    "id": 5025638
                  },
                  "largest_downloads": [
                    {
                      "uri": "ex voluptate et Excepteur",
                      "product_id": "sed laborum sunt et"
                    },
                    {
                      "product_type": "qui laboris elit deserunt"
                    },
                    {
                      "product_type": "eu ea",
                      "product_id": "elit",
                      "uri": "culpa irure cillum exercitation elit"
                    },
                    {
                      "product_type": "ad irure culpa sit"
                    },
                    {
                      "product_type": "ipsum tempor anim adipisicing",
                      "uri": "et dolor veniam"
                    }
                  ],
                  "copyright": "eiusmod qui",
                  "quality_rank": 8379260,
                  "referral_destinations": [
                    {},
                    {}
                  ],
                  "uri_oembed": "ut aliquip id consequat",
                  "color_type": "exercitation tempor consectetur culpa",
                  "editorial_segments": [
                    "enim in deserunt magna",
                    "deserunt ea",
                    "velit ipsum mollit",
                    "sint quis ut labore pariatur"
                  ],
                  "artist": "adipisicing",
                  "license_model": "irure dolore",
                  "date_created": "3057-01-14T07:14:24.874Z",
                  "event_ids": [
                    88334395
                  ],
                  "date_camera_shot": "2789-10-14T00:34:06.306Z",
                  "collection_id": 15034839,
                  "alternative_ids": [
                    {
                      "Key": "i"
                    },
                    {
                      "Value": "in",
                      "Key": "irure veniam Duis non"
                    }
                  ],
                  "keywords": [
                    {
                      "keyword_id": "commodo amet"
                    }
                  ],
                  "product_types": [
                    "Excepteur sed",
                    "nisi"
                  ]
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Specifies the count of matching images returned.",
                  "type": "integer"
                },
                "images": {
                  "description": "List of image search results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the image.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "alternative_ids": {
                        "description": "Lists all of the alternative ids for the asset.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Key": {
                              "type": "string"
                            },
                            "Value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies image creator.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "call_for_image": {
                        "description": "Indicates whether a customer needs to call Getty Images in order to license this image.",
                        "type": "boolean"
                      },
                      "caption": {
                        "description": "Gives a brief description of the image.",
                        "type": "string"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the image belongs.",
                        "type": "integer"
                      },
                      "collection_name": {
                        "description": "Specifies the name of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the image.",
                        "type": "string"
                      },
                      "date_camera_shot": {
                        "format": "date-time",
                        "description": "Specifies the date the image was shot, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the image was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display sizes available for this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "editorial_segments": {
                        "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "editorial_source": {
                        "description": "Specifies the editorial source of the image",
                        "type": "object",
                        "properties": {
                          "id": {
                            "format": "int32",
                            "description": "Specifies the editorial source id of the image",
                            "type": "integer"
                          }
                        }
                      },
                      "event_ids": {
                        "description": "Lists the events that are relevant for this image.",
                        "type": "array",
                        "items": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "graphical_style": {
                        "description": "Specifies the graphical style for the image. Possible values are Photography, Fine Art, and Illustration.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Specifies the unique identifier for the image.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keywords that are associated with this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "largest_downloads": {
                        "description": "Lists the available largest download sizes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_id": {
                              "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                              "type": "string"
                            },
                            "product_type": {
                              "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "POST this URI to download the asset.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the image. Possible values are: royaltyfree, rightsmanaged.",
                        "type": "string"
                      },
                      "max_dimensions": {
                        "description": "Specifies the maximum height and width of any size for this image.",
                        "type": "object",
                        "properties": {
                          "height": {
                            "format": "int32",
                            "description": "Specifies the height in pixels.",
                            "type": "integer"
                          },
                          "width": {
                            "format": "int32",
                            "description": "Specifies the width in pixels.",
                            "type": "integer"
                          }
                        }
                      },
                      "orientation": {
                        "description": "Specifies the orientation of the image. Possible values are: Horizontal, PanoramicHorizontal, PanoramicVertical, Square, Vertical, and null.",
                        "type": "string"
                      },
                      "people": {
                        "description": "List of people appearing in the image.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "product_types": {
                        "description": "Lists the product types for the image. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "quality_rank": {
                        "format": "int32",
                        "description": "Specifies the quality ranking of the image.",
                        "type": "integer"
                      },
                      "referral_destinations": {
                        "description": "Lists the referral destinations for Getty Images assets.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "site_name": {
                              "description": "Specifies the asset domain name.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve appropriate referral destination data.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "title": {
                        "description": "Specifies the image title.",
                        "type": "string"
                      },
                      "uri_oembed": {
                        "description": "GET this URI to retrieve oEmbed data for the image, if embeddable.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

#### Search for both creative and editorial videos [GET /v3/search/videos]

+ Parameters

    + age_of_people: newborn,baby,child,teenager,young_adult,adult,adults_only,mature_adult,senior_adult,months_0_1,months_2_5,months_6_11,months_12_17,months_18_23,years_2_3,years_4_5,years_6_7,years_8_9,years_10_11,years_12_13,years_14_15,years_16_17,years_18_19,years_20_24,years_20_29,years_25_29,years_30_34,years_30_39,years_35_39,years_40_44,years_40_49,years_45_49,years_50_54,years_50_59,years_55_59,years_60_64,years_60_69,years_65_69,years_70_79,years_80_89,over_90,over_100
    
    + collection_codes: 
    
    + collections_filter_type: include,exclude
    
    + exclude_nudity
    
    + fields: allowed_use,artist,asset_family,caption,clip_length,collection_code,collection_id,collection_name,color_type,comp,copyright,date_created,detail_set,display_set,editorial_segments,era,id,keywords,largest_downloads,license_model,mastered_to,originally_shot_on,preview,product_types,shot_speed,source,summary_set,thumb,title
    
    + format_available: sd,hd,4k
    
    + keyword_ids: 
    
    + license_models: rights_ready,royalty_free
    
    + page
    
    + page_size
    
    + phrase
    
    + product_types: easy_access,editorial_subscription,image_pack,premium_access,royalty_free_subscription,credit_pack
    
    + sort_order: best_match,most_popular,newest,oldest
    
    + specific_people: 

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Specifies the count of matching assets returned.",
                  "type": "integer"
                },
                "videos": {
                  "description": "List of video search results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Specifies the unique identifier of the asset.",
                        "type": "string"
                      },
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the asset.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies video creator.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "caption": {
                        "description": "Gives a brief description of the video.",
                        "type": "string"
                      },
                      "clip_length": {
                        "description": "Specifies the length of the film clip (Example: \"00:00:12:08\").",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the video belongs.",
                        "type": "integer"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the video belongs.",
                        "type": "string"
                      },
                      "collection_name": {
                        "description": "Specifies the name of the collection to which the video belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the video.",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the video was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display size information for this video.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "era": {
                        "description": "The era of the video. Possible values are: archival, contemporary, and null.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keyword entries associated with image/asset.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "largest_downloads": {
                        "description": "Lists the available largest download sizes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_id": {
                              "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                              "type": "string"
                            },
                            "product_type": {
                              "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "POST this URI to download the asset.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the video. Possible values are: royaltyfree, rightsready.",
                        "type": "string"
                      },
                      "mastered_to": {
                        "description": "Specifies the mastered to media.",
                        "type": "string"
                      },
                      "originally_shot_on": {
                        "description": "Specifies the film stock originally shot on.",
                        "type": "string"
                      },
                      "product_types": {
                        "description": "Lists the product types for the video. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "shot_speed": {
                        "description": "Specifies the speed the at which the video was shot. Possible values are: real_time, slow_motion, time_lapse, and null.",
                        "type": "string"
                      },
                      "source": {
                        "description": "Specifies the editorial source.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Specifies the title given by the artist.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

#### Search for creative videos [GET /v3/search/videos/creative]

+ Parameters

    + age_of_people: newborn,baby,child,teenager,young_adult,adult,adults_only,mature_adult,senior_adult,months_0_1,months_2_5,months_6_11,months_12_17,months_18_23,years_2_3,years_4_5,years_6_7,years_8_9,years_10_11,years_12_13,years_14_15,years_16_17,years_18_19,years_20_24,years_20_29,years_25_29,years_30_34,years_30_39,years_35_39,years_40_44,years_40_49,years_45_49,years_50_54,years_50_59,years_55_59,years_60_64,years_60_69,years_65_69,years_70_79,years_80_89,over_90,over_100
    
    + collection_codes: 
    
    + collections_filter_type: include,exclude
    
    + exclude_nudity
    
    + fields: allowed_use,artist,asset_family,caption,clip_length,collection_code,collection_id,collection_name,color_type,comp,copyright,date_created,detail_set,display_set,era,id,keywords,largest_downloads,license_model,mastered_to,originally_shot_on,preview,product_types,shot_speed,source,summary_set,thumb,title
    
    + format_available: sd,hd,4k
    
    + keyword_ids: 
    
    + license_models: rights_ready,royalty_free
    
    + page
    
    + page_size
    
    + phrase
    
    + product_types: easy_access,editorial_subscription,image_pack,premium_access,royalty_free_subscription,credit_pack
    
    + sort_order: best_match,newest

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Specifies the count of matching assets returned.",
                  "type": "integer"
                },
                "videos": {
                  "description": "List of video search results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Specifies the unique identifier of the asset.",
                        "type": "string"
                      },
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the asset.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies video creator.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "caption": {
                        "description": "Gives a brief description of the video.",
                        "type": "string"
                      },
                      "clip_length": {
                        "description": "Specifies the length of the film clip (Example: \"00:00:12:08\").",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the video belongs.",
                        "type": "integer"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the video belongs.",
                        "type": "string"
                      },
                      "collection_name": {
                        "description": "Specifies the name of the collection to which the video belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the video.",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the video was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display size information for this video.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "era": {
                        "description": "The era of the video. Possible values are: archival, contemporary, and null.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keyword entries associated with image/asset.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "largest_downloads": {
                        "description": "Lists the available largest download sizes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_id": {
                              "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                              "type": "string"
                            },
                            "product_type": {
                              "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "POST this URI to download the asset.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the video. Possible values are: royaltyfree, rightsready.",
                        "type": "string"
                      },
                      "mastered_to": {
                        "description": "Specifies the mastered to media.",
                        "type": "string"
                      },
                      "originally_shot_on": {
                        "description": "Specifies the film stock originally shot on.",
                        "type": "string"
                      },
                      "product_types": {
                        "description": "Lists the product types for the video. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "shot_speed": {
                        "description": "Specifies the speed the at which the video was shot. Possible values are: real_time, slow_motion, time_lapse, and null.",
                        "type": "string"
                      },
                      "source": {
                        "description": "Specifies the editorial source.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Specifies the title given by the artist.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

#### Search for editorial videos [GET /v3/search/videos/editorial]

+ Parameters

    + age_of_people: newborn,baby,child,teenager,young_adult,adult,adults_only,mature_adult,senior_adult,months_0_1,months_2_5,months_6_11,months_12_17,months_18_23,years_2_3,years_4_5,years_6_7,years_8_9,years_10_11,years_12_13,years_14_15,years_16_17,years_18_19,years_20_24,years_20_29,years_25_29,years_30_34,years_30_39,years_35_39,years_40_44,years_40_49,years_45_49,years_50_54,years_50_59,years_55_59,years_60_64,years_60_69,years_65_69,years_70_79,years_80_89,over_90,over_100
    
    + collection_codes: 
    
    + collections_filter_type: include,exclude
    
    + entity_uris: 
    
    + exclude_nudity
    
    + fields: allowed_use,artist,asset_family,caption,clip_length,collection_code,collection_id,collection_name,color_type,comp,copyright,date_created,detail_set,display_set,editorial_segments,era,id,keywords,largest_downloads,license_model,mastered_to,originally_shot_on,preview,product_types,shot_speed,source,summary_set,thumb,title
    
    + format_available: sd,hd,4k
    
    + keyword_ids: 
    
    + page
    
    + page_size
    
    + phrase
    
    + product_types: easy_access,editorial_subscription,image_pack,premium_access,royalty_free_subscription,credit_pack
    
    + sort_order: best_match,most_popular,newest,oldest
    
    + specific_people: 

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Specifies the count of matching assets returned.",
                  "type": "integer"
                },
                "videos": {
                  "description": "List of video search results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Specifies the unique identifier of the asset.",
                        "type": "string"
                      },
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the asset.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies video creator.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "caption": {
                        "description": "Gives a brief description of the video.",
                        "type": "string"
                      },
                      "clip_length": {
                        "description": "Specifies the length of the film clip (Example: \"00:00:12:08\").",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the video belongs.",
                        "type": "integer"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the video belongs.",
                        "type": "string"
                      },
                      "collection_name": {
                        "description": "Specifies the name of the collection to which the video belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the video.",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the video was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display size information for this video.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "era": {
                        "description": "The era of the video. Possible values are: archival, contemporary, and null.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keyword entries associated with image/asset.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "largest_downloads": {
                        "description": "Lists the available largest download sizes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_id": {
                              "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                              "type": "string"
                            },
                            "product_type": {
                              "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "POST this URI to download the asset.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the video. Possible values are: royaltyfree, rightsready.",
                        "type": "string"
                      },
                      "mastered_to": {
                        "description": "Specifies the mastered to media.",
                        "type": "string"
                      },
                      "originally_shot_on": {
                        "description": "Specifies the film stock originally shot on.",
                        "type": "string"
                      },
                      "product_types": {
                        "description": "Lists the product types for the video. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "shot_speed": {
                        "description": "Specifies the speed the at which the video was shot. Possible values are: real_time, slow_motion, time_lapse, and null.",
                        "type": "string"
                      },
                      "source": {
                        "description": "Specifies the editorial source.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Specifies the title given by the artist.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

## Group Images

#### Get metadata for multiple images by supplying multiple image ids [GET /v3/images]

+ Parameters

    + ids:  (required)
    
    + fields: allowed_use,alternative_ids,artist,artist_title,asset_family,call_for_image,caption,city,collection_code,collection_id,collection_name,color_type,comp,copyright,country,credit_line,date_camera_shot,date_created,date_submitted,detail_set,display_set,download_sizes,downloads,editorial_segments,editorial_source,event_ids,graphical_style,id,keywords,largest_downloads,license_model,links,max_dimensions,orientation,people,prestige,preview,product_types,quality_rank,referral_destinations,state_province,summary_set,thumb,title,uri_oembed

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "images": {
                  "description": "List of image identifiers found.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the image.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "alternative_ids": {
                        "description": "Lists all of the alternative ids for the asset.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Key": {
                              "type": "string"
                            },
                            "Value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies image creator.",
                        "type": "string"
                      },
                      "artist_title": {
                        "description": "Specifies the title given by the artist.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "call_for_image": {
                        "description": "Indicates whether a customer needs to call Getty Images in order to license this image.",
                        "type": "boolean"
                      },
                      "caption": {
                        "description": "Gives a brief description of the image.",
                        "type": "string"
                      },
                      "city": {
                        "description": "Specifies the city name.",
                        "type": "string"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the image belongs.",
                        "type": "integer"
                      },
                      "collection_name": {
                        "description": "Specifies the name of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the image.",
                        "type": "string"
                      },
                      "country": {
                        "description": "Specifies the country where the image was created.",
                        "type": "string"
                      },
                      "credit_line": {
                        "description": "Specifies the line of copy acknowledging the source or origin of the image.",
                        "type": "string"
                      },
                      "date_camera_shot": {
                        "format": "date-time",
                        "description": "Specifies the date the image was shot, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the image was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "date_submitted": {
                        "format": "date-time",
                        "description": "Specifies the date the image was submitted, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display sizes available for this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "download_sizes": {
                        "description": "Lists the available download size information.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "bytes": {
                              "format": "int32",
                              "description": "Indicates the size in bytes.",
                              "type": "integer"
                            },
                            "downloads": {
                              "description": "Lists the sizes available for download.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "product_id": {
                                    "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                                    "type": "string"
                                  },
                                  "product_type": {
                                    "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                                    "type": "string"
                                  },
                                  "uri": {
                                    "description": "POST this URI to download the asset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "height": {
                              "format": "int32",
                              "description": "Specifies the height in pixels.",
                              "type": "integer"
                            },
                            "media_type": {
                              "description": "Specifies the file type expressed as internet media content type.",
                              "type": "string"
                            },
                            "width": {
                              "format": "int32",
                              "description": "Specifies the width in pixels.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "editorial_segments": {
                        "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "editorial_source": {
                        "description": "Specifies the editorial source of the image",
                        "type": "object",
                        "properties": {
                          "id": {
                            "format": "int32",
                            "description": "Specifies the editorial source id of the image",
                            "type": "integer"
                          }
                        }
                      },
                      "event_ids": {
                        "description": "Lists the events that are relevant for this image.",
                        "type": "array",
                        "items": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "graphical_style": {
                        "description": "Specifies the graphical style for the image. Possible values are Photography, Fine Art, and Illustration.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Specifies the unique identifier for the image.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keywords that are associated with this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "largest_downloads": {
                        "description": "Lists the available largest download sizes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "bytes": {
                              "format": "int32",
                              "description": "Indicates the size in bytes.",
                              "type": "integer"
                            },
                            "downloads": {
                              "description": "Lists the sizes available for download.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "product_id": {
                                    "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                                    "type": "string"
                                  },
                                  "product_type": {
                                    "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                                    "type": "string"
                                  },
                                  "uri": {
                                    "description": "POST this URI to download the asset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "height": {
                              "format": "int32",
                              "description": "Specifies the height in pixels.",
                              "type": "integer"
                            },
                            "media_type": {
                              "description": "Specifies the file type expressed as internet media content type.",
                              "type": "string"
                            },
                            "width": {
                              "format": "int32",
                              "description": "Specifies the width in pixels.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the image. Possible values are: royaltyfree, rightsmanaged.",
                        "type": "string"
                      },
                      "links": {
                        "description": "List of links to explore related content, such as similar images and images from the same artist.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "description": "Specifies the link's relationship to the asset.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve image details regarding the related resource.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "max_dimensions": {
                        "description": "Specifies the maximum height and width of any size for this image.",
                        "type": "object",
                        "properties": {
                          "height": {
                            "format": "int32",
                            "description": "Specifies the height in pixels.",
                            "type": "integer"
                          },
                          "width": {
                            "format": "int32",
                            "description": "Specifies the width in pixels.",
                            "type": "integer"
                          }
                        }
                      },
                      "orientation": {
                        "description": "Specifies the orientation of the image. Possible values are: Horizontal, PanoramicHorizontal, PanoramicVertical, Square, Vertical, and null.",
                        "type": "string"
                      },
                      "people": {
                        "description": "List of people appearing in the image.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "prestige": {
                        "description": "Specifies the image is in the curated Prestige collection.",
                        "type": "boolean"
                      },
                      "product_types": {
                        "description": "Lists the product types for the image. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "quality_rank": {
                        "format": "int32",
                        "description": "Specifies the quality ranking of the image.",
                        "type": "integer"
                      },
                      "referral_destinations": {
                        "description": "Specifies the referral destination for Getty Images assets.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "site_name": {
                              "description": "Specifies the asset domain name.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve appropriate referral destination data.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "state_province": {
                        "description": "Specifies the state or province where the image was created.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Specifies the image title.",
                        "type": "string"
                      },
                      "uri_oembed": {
                        "description": "GET this URI to retrieve oEmbed data for the image, if embeddable.",
                        "type": "string"
                      }
                    }
                  }
                },
                "images_not_found": {
                  "description": "List of image identifiers not found.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    ImageNotFound

    + Body

#### Get metadata for a single image by supplying one image id [GET /v3/images/{id}]

+ Parameters

    + id (required)
    
    + fields: allowed_use,alternative_ids,artist,artist_title,asset_family,call_for_image,caption,city,collection_code,collection_id,collection_name,color_type,comp,copyright,country,credit_line,date_camera_shot,date_created,date_submitted,detail_set,display_set,download_sizes,downloads,editorial_segments,editorial_source,event_ids,graphical_style,id,keywords,largest_downloads,license_model,links,max_dimensions,orientation,people,prestige,preview,product_types,quality_rank,referral_destinations,state_province,summary_set,thumb,title,uri_oembed

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "images": {
                  "description": "List of image identifiers found.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the image.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "alternative_ids": {
                        "description": "Lists all of the alternative ids for the asset.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Key": {
                              "type": "string"
                            },
                            "Value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies image creator.",
                        "type": "string"
                      },
                      "artist_title": {
                        "description": "Specifies the title given by the artist.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "call_for_image": {
                        "description": "Indicates whether a customer needs to call Getty Images in order to license this image.",
                        "type": "boolean"
                      },
                      "caption": {
                        "description": "Gives a brief description of the image.",
                        "type": "string"
                      },
                      "city": {
                        "description": "Specifies the city name.",
                        "type": "string"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the image belongs.",
                        "type": "integer"
                      },
                      "collection_name": {
                        "description": "Specifies the name of the collection to which the image belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the image.",
                        "type": "string"
                      },
                      "country": {
                        "description": "Specifies the country where the image was created.",
                        "type": "string"
                      },
                      "credit_line": {
                        "description": "Specifies the line of copy acknowledging the source or origin of the image.",
                        "type": "string"
                      },
                      "date_camera_shot": {
                        "format": "date-time",
                        "description": "Specifies the date the image was shot, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the image was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "date_submitted": {
                        "format": "date-time",
                        "description": "Specifies the date the image was submitted, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display sizes available for this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "download_sizes": {
                        "description": "Lists the available download size information.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "bytes": {
                              "format": "int32",
                              "description": "Indicates the size in bytes.",
                              "type": "integer"
                            },
                            "downloads": {
                              "description": "Lists the sizes available for download.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "product_id": {
                                    "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                                    "type": "string"
                                  },
                                  "product_type": {
                                    "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                                    "type": "string"
                                  },
                                  "uri": {
                                    "description": "POST this URI to download the asset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "height": {
                              "format": "int32",
                              "description": "Specifies the height in pixels.",
                              "type": "integer"
                            },
                            "media_type": {
                              "description": "Specifies the file type expressed as internet media content type.",
                              "type": "string"
                            },
                            "width": {
                              "format": "int32",
                              "description": "Specifies the width in pixels.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "editorial_segments": {
                        "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "editorial_source": {
                        "description": "Specifies the editorial source of the image",
                        "type": "object",
                        "properties": {
                          "id": {
                            "format": "int32",
                            "description": "Specifies the editorial source id of the image",
                            "type": "integer"
                          }
                        }
                      },
                      "event_ids": {
                        "description": "Lists the events that are relevant for this image.",
                        "type": "array",
                        "items": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "graphical_style": {
                        "description": "Specifies the graphical style for the image. Possible values are Photography, Fine Art, and Illustration.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Specifies the unique identifier for the image.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keywords that are associated with this image.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "largest_downloads": {
                        "description": "Lists the available largest download sizes.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "bytes": {
                              "format": "int32",
                              "description": "Indicates the size in bytes.",
                              "type": "integer"
                            },
                            "downloads": {
                              "description": "Lists the sizes available for download.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "product_id": {
                                    "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                                    "type": "string"
                                  },
                                  "product_type": {
                                    "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                                    "type": "string"
                                  },
                                  "uri": {
                                    "description": "POST this URI to download the asset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "height": {
                              "format": "int32",
                              "description": "Specifies the height in pixels.",
                              "type": "integer"
                            },
                            "media_type": {
                              "description": "Specifies the file type expressed as internet media content type.",
                              "type": "string"
                            },
                            "width": {
                              "format": "int32",
                              "description": "Specifies the width in pixels.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the image. Possible values are: royaltyfree, rightsmanaged.",
                        "type": "string"
                      },
                      "links": {
                        "description": "List of links to explore related content, such as similar images and images from the same artist.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "description": "Specifies the link's relationship to the asset.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve image details regarding the related resource.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "max_dimensions": {
                        "description": "Specifies the maximum height and width of any size for this image.",
                        "type": "object",
                        "properties": {
                          "height": {
                            "format": "int32",
                            "description": "Specifies the height in pixels.",
                            "type": "integer"
                          },
                          "width": {
                            "format": "int32",
                            "description": "Specifies the width in pixels.",
                            "type": "integer"
                          }
                        }
                      },
                      "orientation": {
                        "description": "Specifies the orientation of the image. Possible values are: Horizontal, PanoramicHorizontal, PanoramicVertical, Square, Vertical, and null.",
                        "type": "string"
                      },
                      "people": {
                        "description": "List of people appearing in the image.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "prestige": {
                        "description": "Specifies the image is in the curated Prestige collection.",
                        "type": "boolean"
                      },
                      "product_types": {
                        "description": "Lists the product types for the image. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "quality_rank": {
                        "format": "int32",
                        "description": "Specifies the quality ranking of the image.",
                        "type": "integer"
                      },
                      "referral_destinations": {
                        "description": "Specifies the referral destination for Getty Images assets.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "site_name": {
                              "description": "Specifies the asset domain name.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve appropriate referral destination data.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "state_province": {
                        "description": "Specifies the state or province where the image was created.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Specifies the image title.",
                        "type": "string"
                      },
                      "uri_oembed": {
                        "description": "GET this URI to retrieve oEmbed data for the image, if embeddable.",
                        "type": "string"
                      }
                    }
                  }
                },
                "images_not_found": {
                  "description": "List of image identifiers not found.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    ImageNotFound

    + Body

#### Search for images similar to an image [GET /v3/images/{id}/similar]

+ Parameters

    + id (required)
    
    + fields: accessrestriction,allowed_use,alternative_ids,artist,asset_family,call_for_image,caption,collection_code,collection_id,collection_name,color_type,comp,copyright,date_camera_shot,date_created,detail_set,display_set,editorial_segments,editorial_source,event_ids,graphical_style,id,keywords,largest_downloads,license_model,max_dimensions,orientation,people,prestige,preview,product_types,quality_rank,referral_destinations,summary_set,thumb,title,uri_oembed
    
    + page
    
    + page_size

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            enim

    + Schema

            {
              "type": "string"
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    ImageNotFound

    + Body

## Group Videos

#### Get metadata for multiple videos by supplying multiple video ids [GET /v3/videos]

+ Parameters

    + ids:  (required)
    
    + fields: id,allowed_use,artist,asset_family,caption,clip_length,collection_code,collection_id,collection_name,color_type,copyright,video_comp,date_created,detail_set,display_set,download_sizes,downloads,era,editorial_segments,keywords,license_model,mastered_to,originally_shot_on,video_preview,product_types,shot_speed,source,summary_set,video_thumb,title

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "Videos": [
                {
                  "download_sizes": [
                    {
                      "width": 8780764,
                      "height": 49392494,
                      "downloads": [
                        {
                          "product_id": "consectetur",
                          "product_type": "consectetur culpa non",
                          "uri": "adipis"
                        },
                        {
                          "uri": "ipsum",
                          "product_type": "dolore aliquip qui"
                        },
                        {
                          "product_id": "minim eiusmod proident",
                          "product_type": "proident ullamco veniam dolore quis"
                        },
                        {
                          "uri": "tempor"
                        }
                      ],
                      "bytes": 50702498,
                      "media_type": "officia reprehenderit dolor anim exercitation"
                    },
                    {},
                    {
                      "downloads": [
                        {
                          "product_id": "laboris dolore Ut pariatur est",
                          "uri": "ut cillum incididunt Lorem"
                        },
                        {
                          "product_id": "cupidatat eu",
                          "product_type": "labore voluptate in consectetur c"
                        },
                        {},
                        {},
                        {
                          "product_type": "nisi",
                          "product_id": "ut"
                        }
                      ],
                      "width": 93294703,
                      "height": 7165369,
                      "media_type": "nostrud",
                      "bytes": -66932556
                    },
                    {},
                    {}
                  ],
                  "asset_family": "deserunt aute ad velit laborum",
                  "artist": "do",
                  "editorial_segments": [
                    "cillum consectetur",
                    "deserunt irure ullamco"
                  ],
                  "copyright": "eu dolore Ut dolor",
                  "clip_length": "et sed Duis nisi quis",
                  "allowed_use": {
                    "usage_restrictions": [
                      "enim fugiat dolor do ea",
                      "dolore officia enim",
                      "laborum",
                      "sit"
                    ],
                    "how_can_i_use_it": "nisi et sit"
                  }
                },
                {
                  "source": "ut aliquip",
                  "artist": "cupidatat",
                  "download_sizes": [
                    {
                      "width": 41361574,
                      "media_type": "ea",
                      "height": -26823904
                    },
                    {
                      "media_type": "Lorem ex aliqua occaecat do",
                      "height": 29433880,
                      "width": -28987052,
                      "downloads": [
                        {},
                        {
                          "product_type": "minim Duis consequat in"
                        },
                        {
                          "uri": "fugiat",
                          "product_id": "occ"
                        },
                        {},
                        {
                          "product_id": "proident in cillum",
                          "uri": "veniam Ut voluptate reprehenderit eiusmod",
                          "product_type": "consectetur aliqua"
                        }
                      ]
                    },
                    {
                      "downloads": [
                        {
                          "product_id": "reprehenderit",
                          "product_type": "Lorem mollit ullamco dolore"
                        },
                        {
                          "uri": "ni",
                          "product_id": "ex magna"
                        }
                      ],
                      "bytes": -4541799,
                      "media_type": "Ut pariatur"
                    }
                  ],
                  "era": "tempor anim aliquip ad veniam",
                  "copyright": "Excepteur irure"
                },
                {
                  "product_types": [
                    "quis"
                  ],
                  "source": "qui Duis in Ut amet",
                  "display_sizes": [
                    {
                      "is_watermarked": true,
                      "uri": "ullamco dolor dolore labore",
                      "name": "non ad anim Duis"
                    }
                  ],
                  "allowed_use": {},
                  "era": "sit laborum commodo incididunt anim",
                  "collection_id": 81939112,
                  "editorial_segments": [
                    "dolore consequat in aliqua",
                    "magna aliqua sed eu ipsum",
                    "non",
                    "aliqua veniam exercitation in"
                  ],
                  "title": "sit laborum ullamco",
                  "collection_name": "sint et la",
                  "collection_code": "qui",
                  "id": "aliquip adipis"
                },
                {
                  "era": "voluptate ullamco tempor sunt Duis",
                  "collection_code": "ad eiusmod",
                  "title": "Ut aute",
                  "download_sizes": [
                    {
                      "bytes": -80048593,
                      "downloads": [
                        {
                          "product_type": "dolor deserunt laboris"
                        },
                        {
                          "uri": "sit aute",
                          "product_id": "ex nisi ad cillum ea"
                        },
                        {
                          "product_id": "reprehenderit ut deserunt ipsum do"
                        }
                      ],
                      "media_type": "dolor irure",
                      "width": 39013239,
                      "height": 78449551
                    },
                    {
                      "bytes": 73740448
                    },
                    {
                      "downloads": [
                        {
                          "uri": "velit proident adipisicing",
                          "product_id": "t",
                          "product_type": "nulla voluptate"
                        },
                        {
                          "uri": "elit incididunt",
                          "product_id": "labore",
                          "product_type": "nisi sint enim dolor pariatur"
                        },
                        {
                          "uri": "sunt labore fugiat",
                          "product_type": "veniam nulla ad ea ipsum"
                        }
                      ],
                      "media_type": "elit c",
                      "height": 24220197,
                      "width": -1514596
                    }
                  ],
                  "caption": "Ut in mollit",
                  "shot_speed": "est esse id et dolor",
                  "artist": "laboris ipsum sint",
                  "color_type": "amet in",
                  "keywords": [
                    {
                      "keyword_id": "ipsum nisi",
                      "text": "adipisicing re",
                      "type": "eu fugiat"
                    },
                    {
                      "keyword_id": "consectetur anim ",
                      "type": "ea",
                      "text": "cillum occaecat",
                      "relevance": -50032171
                    },
                    {
                      "text": "elit do voluptate velit",
                      "relevance": -21255961,
                      "keyword_id": "elit sed esse proident adipisicing"
                    },
                    {
                      "type": "culpa qui tempor",
                      "text": "sed ullamco sint",
                      "relevance": 77007102,
                      "keyword_id": "eiusmod sed nulla elit id"
                    }
                  ],
                  "allowed_use": {
                    "release_info": "exercitation tempor consectetur repre",
                    "usage_restrictions": [
                      "u",
                      "in reprehenderit in dolor"
                    ],
                    "how_can_i_use_it": "laborum irure"
                  },
                  "collection_name": "in in pariatur amet",
                  "collection_id": 24284758,
                  "product_types": [
                    "consequat nulla dolor venia",
                    "Ut culpa nulla"
                  ],
                  "mastered_to": "voluptate est",
                  "source": "tempor cupidatat laborum dolore ex",
                  "date_created": "3531-09-07T22:43:17.651Z",
                  "clip_length": "commodo ipsum incididunt",
                  "asset_family": "dolore occaecat laborum in",
                  "originally_shot_on": "commodo id culpa cupidatat",
                  "editorial_segments": [
                    "do ut"
                  ],
                  "copyright": "exercitation adipisicing commodo voluptate",
                  "display_sizes": [
                    {
                      "uri": "fugiat in cupidatat in ut",
                      "is_watermarked": false,
                      "name": "qui pariatur commodo nulla dolor"
                    }
                  ],
                  "license_model": "nostrud occaecat laboris reprehenderit sint"
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "Videos": {
                  "description": "List of video identifiers found.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Specifies the unique identifier for the video.",
                        "type": "string"
                      },
                      "allowed_use": {
                        "description": "Specifies how customers are allowed to use the video.",
                        "type": "object",
                        "properties": {
                          "how_can_i_use_it": {
                            "description": "Specifies how the asset can be used.",
                            "type": "string"
                          },
                          "release_info": {
                            "description": "Specifies the release status.",
                            "type": "string"
                          },
                          "usage_restrictions": {
                            "description": "Specifies the asset usage restriction.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "artist": {
                        "description": "Specifies video creator.",
                        "type": "string"
                      },
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "caption": {
                        "description": "Gives a brief description of the video.",
                        "type": "string"
                      },
                      "clip_length": {
                        "description": "Specifies the length of the film clip (Example: \"00:00:12:08\").",
                        "type": "string"
                      },
                      "collection_id": {
                        "format": "int32",
                        "description": "Specifies the id of the collection to which the video belongs.",
                        "type": "integer"
                      },
                      "collection_code": {
                        "description": "Specifies the code of the collection to which the video belongs.",
                        "type": "string"
                      },
                      "collection_name": {
                        "description": "Specifies the id of the collection to which the video belongs.",
                        "type": "string"
                      },
                      "color_type": {
                        "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                        "type": "string"
                      },
                      "copyright": {
                        "description": "Specifies the copyright of the video.",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date-time",
                        "description": "Specifies the date the video was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "display_sizes": {
                        "description": "Lists the display size information for this video.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "download_sizes": {
                        "description": "Lists the available download size information.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "bytes": {
                              "format": "int32",
                              "description": "Indicates the size in bytes.",
                              "type": "integer"
                            },
                            "downloads": {
                              "description": "Lists the sizes available for download.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "product_id": {
                                    "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                                    "type": "string"
                                  },
                                  "product_type": {
                                    "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                                    "type": "string"
                                  },
                                  "uri": {
                                    "description": "POST this URI to download the asset.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "height": {
                              "format": "int32",
                              "description": "Specifies the height in pixels.",
                              "type": "integer"
                            },
                            "media_type": {
                              "description": "Specifies the file type expressed as internet media content type.",
                              "type": "string"
                            },
                            "width": {
                              "format": "int32",
                              "description": "Specifies the width in pixels.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "editorial_segments": {
                        "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "era": {
                        "description": "The era of the video. Possible values are: archival, contemporary, and null.",
                        "type": "string"
                      },
                      "keywords": {
                        "description": "Lists the keywords that are associated with this video.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyword_id": {
                              "description": "Specifies the unique identifier for the keyword.",
                              "type": "string"
                            },
                            "text": {
                              "description": "Provides localized text of the keyword.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the keyword type.",
                              "type": "string"
                            },
                            "relevance": {
                              "format": "int32",
                              "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the video. Possible values are: royaltyfree, rightsready.",
                        "type": "string"
                      },
                      "mastered_to": {
                        "description": "Specifies the video format of the master.",
                        "type": "string"
                      },
                      "originally_shot_on": {
                        "description": "Specifies the media the video was originally shot on.",
                        "type": "string"
                      },
                      "product_types": {
                        "description": "Lists the product types for the video. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "shot_speed": {
                        "description": "Specifies the speed the at which the video was shot. Possible values are: real_time, slow_motion, time_lapse, and null.",
                        "type": "string"
                      },
                      "source": {
                        "description": "Specifies the editorial source of this video.",
                        "type": "string"
                      },
                      "title": {
                        "description": "Specifies the title of this video.",
                        "type": "string"
                      }
                    }
                  }
                },
                "images_not_found": {
                  "description": "List of video identifiers not found.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    VideosNotFound

    + Body

#### Get metadata for a single video by supplying one video id [GET /v3/videos/{id}]

+ Parameters

    + id (required)
    
    + fields: id,allowed_use,artist,asset_family,caption,clip_length,collection_code,collection_id,collection_name,color_type,copyright,video_comp,date_created,detail_set,display_set,download_sizes,downloads,era,editorial_segments,keywords,license_model,mastered_to,originally_shot_on,video_preview,product_types,shot_speed,source,summary_set,video_thumb,title

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "display_sizes": [
                {
                  "uri": "nisi sint est irure"
                },
                {
                  "name": "irure dolore incididunt",
                  "is_watermarked": true,
                  "uri": "dolore sed incididunt elit"
                },
                {
                  "name": "ut minim et laboris"
                }
              ],
              "source": "pariatur Ut",
              "artist": "in eu qui nostrud cupidatat",
              "shot_speed": "fugiat",
              "license_model": "laborum in Duis",
              "title": "minim ex dolor",
              "originally_shot_on": "culpa dolor",
              "collection_code": "consectetur",
              "clip_length": "magna quis pariatur laborum ea",
              "copyright": "non aliqua proident commodo magna",
              "id": "consequat cup",
              "caption": "occaecat tempor dolore commo",
              "download_sizes": [
                {
                  "width": -33311598,
                  "bytes": 77008804,
                  "height": -26392089,
                  "media_type": "proident Lorem exercitation aliqua eiusmod",
                  "downloads": [
                    {
                      "product_type": "Duis",
                      "product_id": "in proident reprehenderit",
                      "uri": "dolor Ut ipsum esse ut"
                    },
                    {},
                    {
                      "product_id": "ut et enim proident",
                      "uri": "et nulla"
                    }
                  ]
                },
                {
                  "height": -54266039,
                  "bytes": -71540185,
                  "width": 3861693,
                  "media_type": "elit"
                }
              ],
              "color_type": "dolore qui",
              "product_types": [
                "et in officia esse",
                "enim et sunt amet",
                "cupidatat id",
                "ullamco",
                "et sed anim ut adipisicing"
              ],
              "keywords": [
                {
                  "type": "labore tempor",
                  "relevance": -24826153,
                  "keyword_id": "mollit pariatur officia ipsum ut"
                },
                {
                  "keyword_id": "tempor"
                },
                {
                  "keyword_id": "consectetur in tempor",
                  "relevance": 82594392,
                  "text": "fugiat",
                  "type": "mollit"
                }
              ],
              "editorial_segments": [
                "venia",
                "dolore venia",
                "et quis dolor commodo ut",
                "non consectetur",
                "non ipsum labore laborum"
              ],
              "date_created": "2200-02-28T12:20:24.410Z",
              "collection_id": -14113651,
              "asset_family": "irure amet sed nisi",
              "collection_name": "sit proide",
              "era": "sunt",
              "mastered_to": "sit deserunt nulla adipisicing aliquip"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Specifies the unique identifier for the video.",
                  "type": "string"
                },
                "allowed_use": {
                  "description": "Specifies how customers are allowed to use the video.",
                  "type": "object",
                  "properties": {
                    "how_can_i_use_it": {
                      "description": "Specifies how the asset can be used.",
                      "type": "string"
                    },
                    "release_info": {
                      "description": "Specifies the release status.",
                      "type": "string"
                    },
                    "usage_restrictions": {
                      "description": "Specifies the asset usage restriction.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "artist": {
                  "description": "Specifies video creator.",
                  "type": "string"
                },
                "asset_family": {
                  "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                  "type": "string"
                },
                "caption": {
                  "description": "Gives a brief description of the video.",
                  "type": "string"
                },
                "clip_length": {
                  "description": "Specifies the length of the film clip (Example: \"00:00:12:08\").",
                  "type": "string"
                },
                "collection_id": {
                  "format": "int32",
                  "description": "Specifies the id of the collection to which the video belongs.",
                  "type": "integer"
                },
                "collection_code": {
                  "description": "Specifies the code of the collection to which the video belongs.",
                  "type": "string"
                },
                "collection_name": {
                  "description": "Specifies the id of the collection to which the video belongs.",
                  "type": "string"
                },
                "color_type": {
                  "description": "Specifies whether the image or video is color or black and white. Possible values are color, black_and_white, and null.",
                  "type": "string"
                },
                "copyright": {
                  "description": "Specifies the copyright of the video.",
                  "type": "string"
                },
                "date_created": {
                  "format": "date-time",
                  "description": "Specifies the date the video was created, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                  "type": "string"
                },
                "display_sizes": {
                  "description": "Lists the display size information for this video.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "is_watermarked": {
                        "description": "Specifies whether the image is watermarked.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Specifies the name of the display size.",
                        "type": "string"
                      },
                      "uri": {
                        "description": "GET this URI to retrieve the display size image.",
                        "type": "string"
                      }
                    }
                  }
                },
                "download_sizes": {
                  "description": "Lists the available download size information.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bytes": {
                        "format": "int32",
                        "description": "Indicates the size in bytes.",
                        "type": "integer"
                      },
                      "downloads": {
                        "description": "Lists the sizes available for download.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_id": {
                              "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                              "type": "string"
                            },
                            "product_type": {
                              "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "POST this URI to download the asset.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "height": {
                        "format": "int32",
                        "description": "Specifies the height in pixels.",
                        "type": "integer"
                      },
                      "media_type": {
                        "description": "Specifies the file type expressed as internet media content type.",
                        "type": "string"
                      },
                      "width": {
                        "format": "int32",
                        "description": "Specifies the width in pixels.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "editorial_segments": {
                  "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "era": {
                  "description": "The era of the video. Possible values are: archival, contemporary, and null.",
                  "type": "string"
                },
                "keywords": {
                  "description": "Lists the keywords that are associated with this video.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "keyword_id": {
                        "description": "Specifies the unique identifier for the keyword.",
                        "type": "string"
                      },
                      "text": {
                        "description": "Provides localized text of the keyword.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Specifies the keyword type.",
                        "type": "string"
                      },
                      "relevance": {
                        "format": "int32",
                        "description": "Specifies the relevancy of the keyword to the asset. 0-5 or null, 5 being most relevant.",
                        "type": "integer"
                      }
                    }
                  }
                },
                "license_model": {
                  "description": "Specifies the licensing model for the video. Possible values are: royaltyfree, rightsready.",
                  "type": "string"
                },
                "mastered_to": {
                  "description": "Specifies the video format of the master.",
                  "type": "string"
                },
                "originally_shot_on": {
                  "description": "Specifies the media the video was originally shot on.",
                  "type": "string"
                },
                "product_types": {
                  "description": "Lists the product types for the video. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "shot_speed": {
                  "description": "Specifies the speed the at which the video was shot. Possible values are: real_time, slow_motion, time_lapse, and null.",
                  "type": "string"
                },
                "source": {
                  "description": "Specifies the editorial source of this video.",
                  "type": "string"
                },
                "title": {
                  "description": "Specifies the title of this video.",
                  "type": "string"
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    UnauthorizedDisplaySize

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    VideosNotFound

    + Body

## Group Downloads

#### Returns information about a customer's downloaded assets. [GET /v3/downloads]

+ Parameters

    + date_from
    
    + date_to
    
    + page
    
    + page_size
    
    + product_type: easyaccess,editorialsubscription,imagepack,premiumaccess,royaltyfreesubscription,creditpack

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "result_count": -26404532
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Specifies the count of matching assets returned.",
                  "type": "integer"
                },
                "downloads": {
                  "description": "Provides a list of download items.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_id": {
                        "description": "Specifies the given product based on a company agreement. Applies only to royaltyfreesubscription and imagepack.",
                        "type": "string"
                      },
                      "product_type": {
                        "description": "Specifies the license agreement applied to this download. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack, sandbox.",
                        "type": "string"
                      },
                      "uri": {
                        "description": "POST this URI to download the asset.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidRequest

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    Forbidden

    + Body

#### Download an image [POST /v3/downloads/{id}]

+ Parameters

    + id (required)
    
    + auto_download
    
    + file_type: eps,jpg
    
    + height
    
    + product_id
    
    + product_type: easyaccess,editorialsubscription,imagepack,premiumaccess,royaltyfreesubscription,creditpack

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {
              "project_code": "reprehenderit ullamco"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 200 (application/json)

    OK

    + Body

            aliquip sed est

    + Schema

            {
              "type": "string"
            }

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {
              "project_code": "reprehenderit"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 303 (application/json)

    See Other

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 400 (application/json)

    InvalidRequestParameterValue

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {
              "project_code": "laboris Lorem",
              "download_notes": "ut in minim in"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {
              "project_code": "",
              "download_notes": "consectetur laboris ipsum Duis"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 404 (application/json)

    ImageNotFound

    + Body

#### Download an image [POST /v3/downloads/images/{id}]

+ Parameters

    + id (required)
    
    + auto_download
    
    + file_type: eps,jpg
    
    + height
    
    + product_id
    
    + product_type: easyaccess,editorialsubscription,imagepack,premiumaccess,royaltyfreesubscription,creditpack

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {
              "project_code": "nostrud irure"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 200 (application/json)

    OK

    + Body

            tempor mollit ut proident

    + Schema

            {
              "type": "string"
            }

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 303 (application/json)

    See Other

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {
              "download_notes": "cillum",
              "project_code": "sed elit consequ"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 400 (application/json)

    InvalidRequestParameterValue

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

            {
              "project_code": "nostrud cillum"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "download_notes": {
                  "description": "Associate a note with the download of an image.",
                  "type": "string"
                },
                "project_code": {
                  "description": "Specifies the associated project code saved with the downloaded of an image.",
                  "type": "string"
                }
              }
            }

+ Response 404 (application/json)

    ImageNotFound

    + Body

#### Download a video [POST /v3/downloads/videos/{id}]

+ Parameters

    + id (required)
    
    + auto_download
    
    + size

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            ut

    + Schema

            {
              "type": "string"
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 303 (application/json)

    See Other

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    AuthorizationTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    VideoNotFound

    + Body

## Group Collections

### /v3/collections

#### Gets collections applicable for the customer. [GET]

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "collections": {
                  "description": "List of collections that belongs to the client.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "asset_family": {
                        "description": "Indicates the asset family classification. Possible values are: creative, editorial.",
                        "type": "string"
                      },
                      "code": {
                        "description": "Specifies the code of the collection.",
                        "type": "string"
                      },
                      "id": {
                        "format": "int32",
                        "description": "Specifies the unique identifier for the collection.",
                        "type": "integer"
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the asset. Possible values are: royaltyfree, rightsmanaged, rightsready.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Specifies the name of the collection.",
                        "type": "string"
                      },
                      "product_types": {
                        "description": "Specifies the license agreements applied to this collection. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 401 (application/json)

    Unauthorized

    + Body

## Group Countries

### /v3/countries

#### Gets countries codes and names. [GET]

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "countries": [
                {
                  "iso_alpha_3": "officia nulla eu",
                  "name": "veniam nulla"
                },
                {},
                {
                  "iso_alpha_2": "dolor cupidatat",
                  "iso_alpha_3": "commodo ex laborum",
                  "name": "sit deserunt labor"
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "countries": {
                  "description": "List of country records.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "iso_alpha_2": {
                        "description": "The 2 Character ISO 3166-1 code for the country aka US, GB, CA, MX.",
                        "type": "string"
                      },
                      "iso_alpha_3": {
                        "description": "The 3 character ISO 3166-1 code for the country aka USA, CAN, GBR, MEX.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Specifies the name of the country.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    Unauthorized

    + Body

## Group Events

#### Get metadata for multiple events [GET /v3/events]

+ Parameters

    + fields: id,child_event_count,editorial_segments,hero_image,image_count,location,name,start_date,type
    
    + ids: 

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "events": {
                  "description": "Lists the event ids matching the search criteria.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "child_event_count": {
                        "format": "int32",
                        "description": "Specifies the count of children events associated with this event.",
                        "type": "integer"
                      },
                      "editorial_segments": {
                        "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hero_image": {
                        "description": "Spcifies the image that best captures the event.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Specifies the image id of the image that best captures the associated group of images.",
                            "type": "string"
                          },
                          "display_sizes": {
                            "description": "Lists the display sizes available for this image.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Specifies the name of the display size.",
                                  "type": "string"
                                },
                                "is_watermarked": {
                                  "description": "Specifies whether the image is watermarked.",
                                  "type": "boolean"
                                },
                                "uri": {
                                  "description": "GET this URI to retrieve the display size image.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "format": "int32",
                        "description": "Specifies the unique identifier for the event.",
                        "type": "integer"
                      },
                      "image_count": {
                        "format": "int32",
                        "description": "Specifies the count of images associated with event.",
                        "type": "integer"
                      },
                      "location": {
                        "description": "Specifies the location where the event took place.",
                        "type": "object",
                        "properties": {
                          "city": {
                            "description": "Specifies the city where the event took place.",
                            "type": "string"
                          },
                          "country": {
                            "description": "Specifies the country where the event took place.",
                            "type": "string"
                          },
                          "state_province": {
                            "description": "Specifies the state or province where the event took place.",
                            "type": "string"
                          },
                          "venue": {
                            "description": "Specifies the venue where the event took place.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Specifies the name of the event.",
                        "type": "string"
                      },
                      "start_date": {
                        "format": "date-time",
                        "description": "Specifies the start date of event, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    Unauthorized

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    EventNotFound

    + Body

#### Get metadata for a single event [GET /v3/events/{id}]

+ Parameters

    + id (required)
    
    + fields: id,child_event_count,editorial_segments,hero_image,image_count,location,name,start_date,type

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "hero_image": {},
              "location": {
                "city": "sit fugiat",
                "venue": "dolor ullamco non esse exercitation",
                "state_province": "dolore nostrud enim ex"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "child_event_count": {
                  "format": "int32",
                  "description": "Specifies the count of children events associated with this event.",
                  "type": "integer"
                },
                "editorial_segments": {
                  "description": "Lists the editorial segments for this asset. Possible values are archival, entertainment, news, publicity, royalty, sport.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "hero_image": {
                  "description": "Spcifies the image that best captures the event.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Specifies the image id of the image that best captures the associated group of images.",
                      "type": "string"
                    },
                    "display_sizes": {
                      "description": "Lists the display sizes available for this image.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Specifies the name of the display size.",
                            "type": "string"
                          },
                          "is_watermarked": {
                            "description": "Specifies whether the image is watermarked.",
                            "type": "boolean"
                          },
                          "uri": {
                            "description": "GET this URI to retrieve the display size image.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "id": {
                  "format": "int32",
                  "description": "Specifies the unique identifier for the event.",
                  "type": "integer"
                },
                "image_count": {
                  "format": "int32",
                  "description": "Specifies the count of images associated with event.",
                  "type": "integer"
                },
                "location": {
                  "description": "Specifies the location where the event took place.",
                  "type": "object",
                  "properties": {
                    "city": {
                      "description": "Specifies the city where the event took place.",
                      "type": "string"
                    },
                    "country": {
                      "description": "Specifies the country where the event took place.",
                      "type": "string"
                    },
                    "state_province": {
                      "description": "Specifies the state or province where the event took place.",
                      "type": "string"
                    },
                    "venue": {
                      "description": "Specifies the venue where the event took place.",
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "description": "Specifies the name of the event.",
                  "type": "string"
                },
                "start_date": {
                  "format": "date-time",
                  "description": "Specifies the start date of event, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                  "type": "string"
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    Unauthorized

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    EventNotFound

    + Body

## Group Products

#### Get Products [GET /v3/products]

+ Parameters

    + fields: download_requirements

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "products": [
                {
                  "application_website": "nostrud",
                  "expiration_utc_date": "3246-05-11T03:42:46.840Z",
                  "download_limit_duration": "ullamco qui esse"
                },
                {},
                {
                  "name": "ut magna",
                  "download_requirements": {},
                  "type": "d",
                  "download_limit": 13841070,
                  "credits_remaining": 62521172,
                  "expiration_utc_date": "2547-08-25T13:15:36.176Z",
                  "downloads_remaining": 51780990,
                  "download_limit_reset_utc_date": "4957-06-24T14:35:59.347Z",
                  "id": 94732786,
                  "download_limit_duration": "dolor"
                },
                {
                  "application_website": "sint",
                  "name": "ex proident",
                  "download_limit_duration": "irure quis adipisicing",
                  "download_requirements": {
                    "is_project_code_required": false,
                    "is_note_required": false,
                    "project_codes": [
                      "sunt cons",
                      "deserunt in fugiat",
                      "quis"
                    ]
                  },
                  "download_limit": 93241869,
                  "downloads_remaining": 66274820
                },
                {
                  "type": "voluptate commodo proident consectetur exercitation",
                  "download_limit": -7121582,
                  "download_limit_reset_utc_date": "4855-10-23T19:23:00.717Z",
                  "application_website": "Duis dolore laboris incididunt",
                  "download_requirements": {
                    "project_codes": [
                      "dolor ad cillum do",
                      "aliquip ut",
                      "Duis",
                      "ut proident",
                      "Duis do occaecat anim"
                    ],
                    "is_project_code_required": true
                  },
                  "name": "commodo eu ullamco occae",
                  "status": "do proident",
                  "credits_remaining": 93550233
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "products": {
                  "description": "List of available Getty Images products.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "application_website": {
                        "description": "URI of application website.",
                        "type": "string"
                      },
                      "credits_remaining": {
                        "format": "int32",
                        "description": "Specifies the remaining credit pack limit",
                        "type": "integer"
                      },
                      "download_limit": {
                        "format": "int32",
                        "description": "Specifies the download limit for product or package.",
                        "type": "integer"
                      },
                      "download_limit_duration": {
                        "description": "Specifies the end date of current download limit.",
                        "type": "string"
                      },
                      "download_limit_reset_utc_date": {
                        "format": "date-time",
                        "description": "Specifies the date when download limit will reset, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "downloads_remaining": {
                        "format": "int32",
                        "description": "Specifies the remaining available downloads.",
                        "type": "integer"
                      },
                      "expiration_utc_date": {
                        "format": "date-time",
                        "description": "Specifies the expiration date, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "id": {
                        "format": "int32",
                        "description": "Specifies the unique identifier for the product.",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Specifies the name of Getty Images product.",
                        "type": "string"
                      },
                      "status": {
                        "description": "Specifies if product status is active or inactive.",
                        "type": "string"
                      },
                      "type": {
                        "description": "List of product types available. Possible values are: premiumaccess, easyaccess, editorialsubscription, imagepack, royaltyfreesubscription, creditpack.",
                        "type": "string"
                      },
                      "download_requirements": {
                        "description": "Specifies the download requirements a company can apply on its users.",
                        "type": "object",
                        "properties": {
                          "is_note_required": {
                            "description": "Indicates if users must enter a note on download.",
                            "type": "boolean"
                          },
                          "is_project_code_required": {
                            "description": "Indicates if users must enter a product code on download.",
                            "type": "boolean"
                          },
                          "project_codes": {
                            "description": "Only users who have been set up with a project code by Getty Sales need to use this field.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 401 (application/json)

    Unauthorized

    + Body

## Group Purchases

#### Get Previously Purchased Images and Video [GET /v3/purchased-assets]

+ Parameters

    + date_from
    
    + date_to
    
    + page
    
    + page_size

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "result_count": -58982
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Count of previously purchased assets returned.",
                  "type": "integer"
                },
                "previous_purchases": {
                  "description": "List of previously purchased assets.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date_purchased": {
                        "format": "date-time",
                        "description": "Specifies the date the asset was downloaded, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "asset_id": {
                        "description": "Specifies the unique identifier for the asset.",
                        "type": "string"
                      },
                      "asset_type": {
                        "description": "Indicates the asset type classification. Possible values are: image, video.",
                        "type": "string"
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the asset. Possible values are: royaltyfree, rightsmanaged, rightsready.",
                        "type": "string"
                      },
                      "order_id": {
                        "description": "Specifies the purchase order id.",
                        "type": "string"
                      },
                      "thumb_uri": {
                        "description": "GET this URI to download the thumbnail.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    Unauthorized

    + Body

#### Get Previously Purchased Images [GET /v3/purchased-images]

+ Parameters

    + date_from
    
    + date_to
    
    + page
    
    + page_size

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "result_count": 40238070,
              "previous_purchases": [
                {
                  "thumb_uri": "do Ut eu voluptate nostrud",
                  "image_id": "ut quis",
                  "date_purchased": "5041-12-29T14:56:42.060Z",
                  "license_model": "et est"
                },
                {
                  "license_model": "Ut",
                  "order_id": "laborum ",
                  "image_id": "exercitation",
                  "date_purchased": "2180-12-21T15:10:46.145Z",
                  "thumb_uri": "est reprehenderit"
                },
                {
                  "order_id": "Lorem sint qui id eu",
                  "thumb_uri": "enim labore in mollit non"
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "result_count": {
                  "format": "int32",
                  "description": "Count of previously purchased images returned.",
                  "type": "integer"
                },
                "previous_purchases": {
                  "description": "List of previously purchased images.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date_purchased": {
                        "format": "date-time",
                        "description": "Specifies the date the image was downloaded, in ISO 8601 format (e.g., 1999-12-31T00:00:00-00:00).",
                        "type": "string"
                      },
                      "image_id": {
                        "description": "Specifies the unique identifier for the image.",
                        "type": "string"
                      },
                      "license_model": {
                        "description": "Specifies the licensing model for the image. Possible values are: royaltyfree, rightsmanaged.",
                        "type": "string"
                      },
                      "order_id": {
                        "description": "Specifies the purchase order id.",
                        "type": "string"
                      },
                      "thumb_uri": {
                        "description": "GET this URI to download the thumbnail.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 

    + Body

+ Response 401 (application/json)

    Unauthorized

    + Body

## Group AssetRegistration

### /v3/asset-registrations

#### Register a list of customer assets. [POST]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer [access-token] 
            Api-Key: [api-key] 
            Accept-Language: [language-code]  

    + Body

            {}

    + Schema

            {
              "description": "Specify request containing the list of asset ids you want to register.",
              "type": "object",
              "properties": {
                "asset_ids": {
                  "description": "Specifies the list of asset ids you want to register.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200 (application/json)

    Success - The assets were successfully registered.

    + Body

            deserunt

    + Schema

            {
              "type": "string"
            }

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer [access-token] 
            Api-Key: [api-key] 
            Accept-Language: [language-code]  

    + Body

            {}

    + Schema

            {
              "description": "Specify request containing the list of asset ids you want to register.",
              "type": "object",
              "properties": {
                "asset_ids": {
                  "description": "Specifies the list of asset ids you want to register.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 401 (application/json)

    AuthorizationTokenRequired - Authorization token was missing or not valid.

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer [access-token] 
            Api-Key: [api-key] 
            Accept-Language: [language-code]  

    + Body

            {
              "asset_ids": [
                "nostrud enim"
              ]
            }

    + Schema

            {
              "description": "Specify request containing the list of asset ids you want to register.",
              "type": "object",
              "properties": {
                "asset_ids": {
                  "description": "Specifies the list of asset ids you want to register.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 500 (application/json)

    AssetRegistrationFailed - There was a failure when registering assets.

    + Body

## Group Usage

### /v3/usage-batches/{id}

#### Report usage of assets via a batch format. [PUT]

+ Parameters

    + id (required)

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

            {}

    + Schema

            {
              "description": "Specifies the request information for the Batch Usages endpoint.",
              "type": "object",
              "properties": {
                "asset_usages": {
                  "description": "Identifies the list of asset id, usage count and date of usage combinations to record.",
                  "type": "array",
                  "items": {
                    "description": "Specifies the id, usage quantity, and date of when an asset was used.",
                    "type": "object",
                    "properties": {
                      "asset_id": {
                        "description": "Specifies the Id of the asset that was used.",
                        "type": "string"
                      },
                      "quantity": {
                        "format": "int32",
                        "description": "Specifies the number of times the asset was used.",
                        "type": "integer"
                      },
                      "usage_date": {
                        "format": "date-time",
                        "description": "Identifies the date the asset was used, in ISO 8601 format (e.g., YYYY-MM-DD), time is not needed.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200 (application/json)

    Success - All usages reported were successfully recorded.

    + Body

            {
              "total_asset_usages_processed": 47584429,
              "invalid_assets": [
                "nulla ipsum veniam",
                "proident in",
                "cillum",
                "Excepteur minim sunt ipsum ullamco",
                "aute exercitation est elit qui"
              ]
            }

    + Schema

            {
              "description": "Specifies the response from the Batch Usages endpoint.",
              "type": "object",
              "properties": {
                "invalid_assets": {
                  "description": "Identifies a list of asset ids submitted that did not match known Getty asset ids.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "total_asset_usages_processed": {
                  "format": "int32",
                  "description": "Specifies the number of asset usage records that were successfully recorded.",
                  "type": "integer"
                }
              }
            }

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

            {
              "asset_usages": [
                {},
                {
                  "quantity": -74558007,
                  "asset_id": "aliquip enim dolor",
                  "usage_date": "2028-03-31T00:35:42.125Z"
                },
                {
                  "quantity": 15175104
                },
                {
                  "asset_id": "sint officia ut",
                  "usage_date": "4769-09-16T14:31:49.973Z",
                  "quantity": 11185282
                },
                {
                  "asset_id": "do",
                  "quantity": -69170448
                }
              ]
            }

    + Schema

            {
              "description": "Specifies the request information for the Batch Usages endpoint.",
              "type": "object",
              "properties": {
                "asset_usages": {
                  "description": "Identifies the list of asset id, usage count and date of usage combinations to record.",
                  "type": "array",
                  "items": {
                    "description": "Specifies the id, usage quantity, and date of when an asset was used.",
                    "type": "object",
                    "properties": {
                      "asset_id": {
                        "description": "Specifies the Id of the asset that was used.",
                        "type": "string"
                      },
                      "quantity": {
                        "format": "int32",
                        "description": "Specifies the number of times the asset was used.",
                        "type": "integer"
                      },
                      "usage_date": {
                        "format": "date-time",
                        "description": "Identifies the date the asset was used, in ISO 8601 format (e.g., YYYY-MM-DD), time is not needed.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 400 (application/json)

    InvalidRequest - The content of the request was invalid. Most commonly this is due to either too many assets specified, no assets or invalid JSON.

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

            {}

    + Schema

            {
              "description": "Specifies the request information for the Batch Usages endpoint.",
              "type": "object",
              "properties": {
                "asset_usages": {
                  "description": "Identifies the list of asset id, usage count and date of usage combinations to record.",
                  "type": "array",
                  "items": {
                    "description": "Specifies the id, usage quantity, and date of when an asset was used.",
                    "type": "object",
                    "properties": {
                      "asset_id": {
                        "description": "Specifies the Id of the asset that was used.",
                        "type": "string"
                      },
                      "quantity": {
                        "format": "int32",
                        "description": "Specifies the number of times the asset was used.",
                        "type": "integer"
                      },
                      "usage_date": {
                        "format": "date-time",
                        "description": "Identifies the date the asset was used, in ISO 8601 format (e.g., YYYY-MM-DD), time is not needed.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 401 (application/json)

    AuthorizationTokenRequired - Authorization token was missing or not valid.

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

            {}

    + Schema

            {
              "description": "Specifies the request information for the Batch Usages endpoint.",
              "type": "object",
              "properties": {
                "asset_usages": {
                  "description": "Identifies the list of asset id, usage count and date of usage combinations to record.",
                  "type": "array",
                  "items": {
                    "description": "Specifies the id, usage quantity, and date of when an asset was used.",
                    "type": "object",
                    "properties": {
                      "asset_id": {
                        "description": "Specifies the Id of the asset that was used.",
                        "type": "string"
                      },
                      "quantity": {
                        "format": "int32",
                        "description": "Specifies the number of times the asset was used.",
                        "type": "integer"
                      },
                      "usage_date": {
                        "format": "date-time",
                        "description": "Identifies the date the asset was used, in ISO 8601 format (e.g., YYYY-MM-DD), time is not needed.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 409 (application/json)

    TransactionIdDuplicated - The id parameter supplied was already used in a previous usage report.

    + Body

## Group AssetChanges

#### Generates asset changes. [PUT /v3/asset-changes/change-sets]

+ Parameters

    + channel_id (required)
    
    + batch_size

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    Your access token does not authorize access to this resource

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    The channel you specified does not exist

    + Body

### /v3/asset-changes/change-sets/{change-set-id}

#### Confirm asset changes acknowledges receipt of asset changes. [DELETE]

+ Parameters

    + change-set-id (required)

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 403 (application/json)

    Your access token does not authorize access to this resource

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 404 (application/json)

    Transaction was not found

    + Body

### /v3/asset-changes/channels

#### Retrieves the channel data for the partner. This data can be used to populate the channel_id parameter in the Put Asset Changes query. [GET]

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Accept-Language: [language-code]  
            Authorization: Bearer [access-token] 

    + Body

+ Response 200 (application/json)

    Success

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "Channels": {
                  "type": "array",
                  "items": {
                    "description": "partner_channel",
                    "type": "object",
                    "properties": {
                      "AssetFamily": {
                        "description": "Specifies the asset family for the channel (e.g. \"editorial\" or \"creative\")",
                        "type": "string"
                      },
                      "ChannelId": {
                        "format": "int32",
                        "description": "Specifies the identification number for the channel",
                        "type": "integer"
                      },
                      "ChannelType": {
                        "description": "Specifies the channel type (i.e. \"New,\" \"Updated\" or \"Deleted\")",
                        "type": "string"
                      },
                      "StartDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                      },
                      "NotificationCount": {
                        "format": "int32",
                        "description": "Specifies the current count of notifications pending in the channel",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }

## Group Boards

### /v3/boards

#### <b>***BETA***</b> Get all boards that the user participates in [GET /v3/boards{?page,page_size}]

+ Parameters

    + page
    
    + page_size

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "boards": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "asset_count": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "date_created": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "date_last_updated": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "hero_asset": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "asset_type": {
                            "type": "string"
                          },
                          "date_added": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "display_sizes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "is_watermarked": {
                                  "description": "Specifies whether the image is watermarked.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Specifies the name of the display size.",
                                  "type": "string"
                                },
                                "uri": {
                                  "description": "GET this URI to retrieve the display size image.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "board_count": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 401 (application/json)

    UserTokenRequired

    + Body

#### <b>***BETA***</b> Create a new board [POST]

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

            {
              "name": "sunt commodo nisi"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }

+ Response 201 (application/json)

    Created

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

            {
              "description": "in commodo ex",
              "name": "laborum"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

            {
              "name": "elit laborum officia anim",
              "description": "velit laboris do"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }

+ Response 401 (application/json)

    UserTokenRequired

    + Body

### /v3/boards/{board_id}

#### <b>***BETA***</b> Get assets and metadata for a specific board [GET]

+ Parameters

    + board_id (required)

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 200 (application/json)

    OK

    + Body

            {
              "name": "nostrud dolore",
              "date_created": "3527-07-16T13:47:13.030Z",
              "id": "commodo Duis aliqua voluptate magna"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "asset_count": {
                  "format": "int32",
                  "type": "integer"
                },
                "assets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "asset_type": {
                        "type": "string"
                      },
                      "date_added": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "display_sizes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "is_watermarked": {
                              "description": "Specifies whether the image is watermarked.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Specifies the name of the display size.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "GET this URI to retrieve the display size image.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "date_created": {
                  "format": "date-time",
                  "type": "string"
                },
                "date_last_updated": {
                  "format": "date-time",
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 401 (application/json)

    UserTokenRequired

    + Body

+ Request

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 404 (application/json)

    BoardNotFound

    + Body

#### <b>***BETA***</b> Update a board [PUT]

+ Parameters

    + board_id (required)

+ Request (application/json)

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }

+ Response 204

    Updated

    + Body

+ Request (application/json)

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

            {
              "description": "in velit exercitation tempor"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }

+ Response 400

    InvalidParameterValue

    + Body

+ Request (application/json)

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

            {}

    + Schema

            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }

+ Response 401

    UserTokenRequired

    + Body

+ Request (application/json)

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

            {
              "name": "Excepteur elit",
              "description": "aliqua in"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }

+ Response 403

    InsufficientAccess

    + Body

+ Request (application/json)

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

            {
              "name": "consectetur enim nostrud cupidatat"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }

+ Response 404

    BoardNotFound

    + Body

#### <b>***BETA***</b> Delete a board [DELETE]

+ Parameters

    + board_id (required)

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 204

    BoardDeleted

    + Body

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 400

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 401

    UserTokenRequired

    + Body

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 403

    InsufficientAccess

    + Body

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 404

    BoardNotFound

    + Body

### /v3/boards/{board_id}/assets/{asset_id}

#### <b>***BETA***</b> Add an asset to a board [PUT]

+ Parameters

    + asset_id (required)
    
    + board_id (required)

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 201 (application/json)

    Created

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 400 (application/json)

    InvalidParameterValue

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 401 (application/json)

    UserTokenRequired

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 403 (application/json)

    AssetNotFound

    + Body

+ Request (application/json)

    + Headers

            Accept: application/json
            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 404 (application/json)

    BoardNotFound

    + Body

#### <b>***BETA***</b> Remove an asset from a board [DELETE]

+ Parameters

    + asset_id (required)
    
    + board_id (required)

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 204

    AssetRemovedFromBoard

    + Body

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 400

    InvalidParameterValue

    + Body

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 401

    UserTokenRequired

    + Body

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 403

    InsufficientAccess

    + Body

+ Request

    + Headers

            Api-Key: [api-key] 
            Authorization: Bearer [access-token] 
            Accept-Language: [language-code]  

    + Body

+ Response 404

    BoardNotFound

    + Body